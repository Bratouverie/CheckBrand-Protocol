/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1967Proxy,
  ERC1967ProxyInterface,
} from "../../../../../@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052604051610928380380610928833981810160405281019061002591906103a2565b6100378282600061003e60201b60201c565b5050610567565b61004d8361007a60201b60201c565b60008251118061005a5750805b156100755761007383836100cf60201b6100371760201c565b505b505050565b6100898161010260201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606100fa8383604051806060016040528060278152602001610901602791396101cf60201b60201c565b905092915050565b6101158161025b60201b6100641760201c565b610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b90610472565b60405180910390fd5b8061018b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61027e60201b6100871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516101f991906104d6565b600060405180830381855af49150503d8060008114610234576040519150601f19603f3d011682016040523d82523d6000602084013e610239565b606091505b50915091506102508683838761028860201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156102f05760008351036102e8576102a88561025b60201b60201c565b6102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102de906104f4565b60405180910390fd5b5b829050610301565b610300838361030960201b60201c565b5b949350505050565b60008251111561031c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103509190610532565b60405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b8381101561038d578082015181840152602081019050610372565b8381111561039c576000848401525b50505050565b600080604083850312156103b557600080fd5b825160018060a01b03811681146103cb57600080fd5b80925050602083015160018060401b03808211156103e857600080fd5b818501915085601f8301126103fc57600080fd5b81518181111561040f5761040e610359565b5b601f1960405181603f83601f860116011681019150808210848311171561043957610438610359565b5b8160405282815288602084870101111561045257600080fd5b61046383602083016020880161036f565b80955050505050509250929050565b60208152602d60208201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60408201527f6f74206120636f6e74726163740000000000000000000000000000000000000060608201526000608082019050919050565b600082516104e881846020870161036f565b80830191505092915050565b60208152601d60208201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060408201526000606082019050919050565b602081526000825180602084015261055181604085016020870161036f565b6040601f19601f83011684010191505092915050565b61038b806105766000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c838360405180606001604052806027815260200161032f602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d61014e565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516100f2919061029d565b600060405180830381855af49150503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b5091509150610143868383876101a5565b925050509392505050565b600061017c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606083156102075760008351036101ff576101bf85610064565b6101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f5906102bb565b60405180910390fd5b5b829050610212565b610211838361021a565b5b949350505050565b60008251111561022d5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026191906102f9565b60405180910390fd5b60005b8381101561028857808201518184015260208101905061026d565b83811115610297576000848401525b50505050565b600082516102af81846020870161026a565b80830191505092915050565b60208152601d60208201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060408201526000606082019050919050565b602081526000825180602084015261031881604085016020870161026a565b6040601f19601f8301168401019150509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220988e1097142bad440aa1c4bf7c42cce11c723388bbb239fa4125b64c8dc1479764736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type ERC1967ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1967ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1967Proxy__factory extends ContractFactory {
  constructor(...args: ERC1967ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logic: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1967Proxy> {
    return super.deploy(
      _logic,
      _data,
      overrides || {}
    ) as Promise<ERC1967Proxy>;
  }
  override getDeployTransaction(
    _logic: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, _data, overrides || {});
  }
  override attach(address: string): ERC1967Proxy {
    return super.attach(address) as ERC1967Proxy;
  }
  override connect(signer: Signer): ERC1967Proxy__factory {
    return super.connect(signer) as ERC1967Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1967ProxyInterface {
    return new utils.Interface(_abi) as ERC1967ProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1967Proxy {
    return new Contract(address, _abi, signerOrProvider) as ERC1967Proxy;
  }
}
