/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Validator,
  ValidatorInterface,
} from "../../../../contracts/develompent/access/Validator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOfCBCOINToPurchase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IValidator.BuyTokensData",
        name: "data",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "verifications",
        type: "uint256",
      },
    ],
    name: "BuyTokensValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "brandName",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "supplyLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IValidator.CreateCollectionData",
        name: "data",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "verifications",
        type: "uint256",
      },
    ],
    name: "CreateCollectionValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "SettedMinVerificationsCount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashData",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatedFrom",
    type: "event",
  },
  {
    inputs: [],
    name: "BUY_TOKENS_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CACHED_DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_TOLLECTION_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOfCBCOINToPurchase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        internalType: "struct IValidator.BuyTokensData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "getBuyTokensHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "brandName",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "supplyLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        internalType: "struct IValidator.CreateCollectionData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "getCreateCollectionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minVerificationsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "validated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5061002b674222322ac958984b60c01b61008060201b60201c565b61004567c557b76abc55ff9d60c01b61008060201b60201c565b61005361008360201b60201c565b60808181525050610074674ac1edbeaf83ced960c01b61008060201b60201c565b60018081905550610149565b50565b600061009f67087c36401c321cf460c01b61008060201b60201c565b6100b96719dbdb11d6b472e660c01b61008060201b60201c565b6100d367f30da08ecb6061f560c01b61008060201b60201c565b7efaf61068b5eb771d64783aba7a98ffebebf083ab00440364df46d0f1e01b36463060405160200161010793929190610122565b60405160208183030381529060405280519060200120905090565b600060608201905084825283602083015260018060a01b0383166040830152949350505050565b608051610833610172600039600081816101fe0152818161026601526103cf01526108336000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063affed0e011610066578063affed0e014610134578063b611ddcf14610152578063c0993eea14610170578063d2a4a2a91461018e578063e08e88ad146101ac57610093565b80630fedf5ff146100985780631c2e4be8146100c8578063563d0911146100e65780639c36109f14610104575b600080fd5b6100b260048036038101906100ad919061048a565b6101dc565b6040516100bf91906104a6565b60405180910390f35b6100d06101fc565b6040516100dd91906104b9565b60405180910390f35b6100ee610220565b6040516100fb91906104ca565b60405180910390f35b61011e60048036038101906101199190610578565b610226565b60405161012b91906104b9565b60405180910390f35b61013c61031e565b60405161014991906104ca565b60405180910390f35b61015a610324565b60405161016791906104b9565b60405180910390f35b610178610348565b60405161018591906104b9565b60405180910390f35b61019661036b565b6040516101a391906104b9565b60405180910390f35b6101c660048036038101906101c19190610677565b61038f565b6040516101d391906104b9565b60405180910390f35b60006020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b600061023c6759e73b445c2ff66260c01b610487565b610250676990941e70fcf90e60c01b610487565b61026467a24f65691b78961060c01b610487565b7f00000000000000000000000000000000000000000000000000000000000000007f5abac5de5d2dfc12a2a7131a872fcc1fb484d073667732c324ccdf13a4473838836000015184602001518560400151866060015187608001518860a001516040516020016102da979695949392919061070f565b6040516020818303038152906040528051906020012060405160200161030192919061079e565b604051602081830303815290604052805190602001209050919050565b60025481565b7f5abac5de5d2dfc12a2a7131a872fcc1fb484d073667732c324ccdf13a447383881565b7efaf61068b5eb771d64783aba7a98ffebebf083ab00440364df46d0f1e01b3681565b7f478c2a0072f1c3844a5087e085de7994d756327389dc3178a2d7973692bcd45481565b60006103a567e4b85f5be46ad5ef60c01b610487565b6103b96707dafa93c729202360c01b610487565b6103cd674d74ef61e409e1e860c01b610487565b7f00000000000000000000000000000000000000000000000000000000000000007f478c2a0072f1c3844a5087e085de7994d756327389dc3178a2d7973692bcd454836000015184602001518560400151866060015187608001518860a0015160405160200161044397969594939291906107b6565b6040516020818303038152906040528051906020012060405160200161046a92919061079e565b604051602081830303815290604052805190602001209050919050565b50565b60006020828403121561049c57600080fd5b8135905092915050565b6000602082019050821515825292915050565b600060208201905082825292915050565b600060208201905082825292915050565b634e487b7160e01b600052604160045260246000fd5b6000604051905060c0810181811067ffffffffffffffff82111715610519576105186104db565b5b806040525090565b60006040519050601f19601f830116810181811067ffffffffffffffff8211171561054f5761054e6104db565b5b8060405250919050565b60008135905060018060a01b038116811461057357600080fd5b919050565b6000602080838503121561058b57600080fd5b823567ffffffffffffffff808211156105a357600080fd5b818501915060c082870312156105b857600080fd5b6105c06104f1565b8235828111156105cf57600080fd5b808401905087601f8201126105e357600080fd5b8035838111156105f6576105f56104db565b5b61060886601f19601f84011601610521565b9350808452888682840101111561061e57600080fd5b80868301878601376000868286010152505081815261063e848401610559565b8482015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528094505050505092915050565b600060c0828403121561068957600080fd5b60405160c0810181811067ffffffffffffffff821117156106ad576106ac6104db565b5b80604052506106bb83610559565b81526106c960208401610559565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b60018060a01b03811682525050565b8781526000602060e08184015288518060e085015260005b818110156107475782818c01015161010082870101528281019050610727565b8181111561075a57600061010083870101525b50610100601f19601f8301168501019250505061077a6040830188610700565b8560608301528460808301528360a08301528260c083015298975050505050505050565b82815281602082015260006040820190509392505050565b600060e08201905088825260018060a01b0380891660208401528088166040840152508560608301528460808301528360a08301528260c08301529897505050505050505056fea2646970667358221220411c5110b15fb912a381ec85b45084775eb97cc545a1da2b7ffc73aee63169ed64736f6c634300080d0033";

type ValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Validator__factory extends ContractFactory {
  constructor(...args: ValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Validator> {
    return super.deploy(overrides || {}) as Promise<Validator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Validator {
    return super.attach(address) as Validator;
  }
  override connect(signer: Signer): Validator__factory {
    return super.connect(signer) as Validator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorInterface {
    return new utils.Interface(_abi) as ValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Validator {
    return new Contract(address, _abi, signerOrProvider) as Validator;
  }
}
